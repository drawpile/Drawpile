--- a/src/tools/androiddeployqt/main.cpp	2023-04-27 05:31:56.134503049 +0200
+++ b/src/tools/androiddeployqt/main.cpp	2023-04-27 05:32:05.291169781 +0200
@@ -406,6 +406,30 @@
 {
     Options options;

+    // Drawpile patch: Qt5 has no provisions to pass additional arguments
+    // to androiddeployqt through cmake and it expects you to dump passwords
+    // into the build files. Qt6 allows the use of these environment variables
+    // instead, so this is a backport of that functionality.
+    QByteArray keyStore = qgetenv("QT_ANDROID_KEYSTORE_PATH");
+    if (!keyStore.isEmpty()) {
+        options.keyStore = QString::fromLocal8Bit(keyStore);
+    }
+    QByteArray keyStoreAlias = qgetenv("QT_ANDROID_KEYSTORE_ALIAS");
+    if (!keyStoreAlias.isEmpty()) {
+        options.keyStoreAlias = QString::fromLocal8Bit(keyStoreAlias);
+    }
+    QByteArray keyStorePassword = qgetenv("QT_ANDROID_KEYSTORE_STORE_PASS");
+    if (!keyStorePassword.isEmpty()) {
+        options.keyStorePassword = QString::fromLocal8Bit(keyStorePassword);
+    }
+    QByteArray keyPass = qgetenv("QT_ANDROID_KEYSTORE_KEY_PASS");
+    if (!keyPass.isEmpty()) {
+        options.keyPass = QString::fromLocal8Bit(keyPass);
+    }
+    if(!options.keyStore.isEmpty() && !options.keyStoreAlias.isEmpty()) {
+        options.releasePackage = true;
+    }
+
     QStringList arguments = QCoreApplication::arguments();
     for (int i=0; i<arguments.size(); ++i) {
         const QString &argument = arguments.at(i);
