name: Build and activate Drawpile dependencies
description: >
  Builds or restores Drawpile dependencies from cache, then activates them by
  adding them to the environment PATH.

inputs:
  build_type:
    description: >
      Build type, roughly equivalent to CMAKE_BUILD_TYPE. One of Debug,
      DebugNoAsan, RelWithDebInfo, Release.
    default: Release
    type: string
  cache_key:
    description: >
      A cache key fragment that will be used to generate a complete cache key
      for each group of dependencies
    default: ${{ runner.os }}
    type: string
  path:
    description: >
      Output base path. Each group of dependencies will generate a separate
      sub-tree within this path.
    default: .github/deps
    type: string
  target_arch:
    description: >
      Architecture of the target platform, one of x86, x86_64, arm32 or arm64.
    type: string

  qt_pre_build:
    description: Command to run before building Qt
    type: string
  qt_args:
    description: Additional arguments to the Qt build script
    type: string

  ffmpeg_pre_build:
    description: Command to run before building ffmpeg dependencies
    type: string
  ffmpeg_args:
    description: Additional arguments to the ffmpeg dependencies build script
    type: string

  other_pre_build:
    description: Command to run before building other dependencies
    type: string
  other_args:
    description: Additional arguments to the other dependencies build script
    type: string

  qt:
    description: Version of Qt to build
    required: true
    type: string
  libvpx:
    description: Version of libvpx to build
    default: '1.15.2'
    type: string
  libwebp:
    description: Version of libwebp to build
    default: '1.5.0'
    type: string
  ffmpeg:
    description: Version of ffmpeg to build
    default: '7.1.1'
    type: string
  libmicrohttpd:
    description: Version of libmicrohttpd to build
    default: 1.0.1
    type: string
  libsodium:
    description: Version of libsodium to build
    default: 1.0.20
    type: string
  qtkeychain:
    description: Version of qtkeychain to build
    default: 0.14.3
    type: string
  libzip:
    description: Version of libzip to build (Qt6 only)
    default: 1.11.3
    type: string
  karchive5:
    description: Version of karchive to build (Qt5 only)
    default: 5.116.0
    type: string
  karchive6:
    description: Version of karchive to build (Qt6 only)
    default: 6.3.0
    type: string
  zlib:
    description: Version of zlib to build (Win32 only)
    default: 1.3.1
    type: string

outputs:
  path:
    description: >
      A semicolon-separated list of all generated dependency trees suitable for
      use with `CMAKE_PREFIX_PATH`
    value: ${{ github.workspace }}/${{ inputs.path }}/qt;${{ github.workspace }}/${{ inputs.path }}/ffmpeg;${{ github.workspace }}/${{ inputs.path }}/other

runs:
  using: composite
  steps:
    - uses: ./.github/actions/build-and-cache
      with:
        name: Qt
        cache_key: qt-${{ inputs.cache_key }}-${{ inputs.qt }}
        path: ${{ inputs.path }}/qt
        pre_build: ${{ inputs.qt_pre_build }}
        build: >
          cmake
          -DBUILD_TYPE=${{ inputs.build_type }}
          "-DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/${{ inputs.path }}/qt"
          "-DQT_VERSION=${{ inputs.qt }}"
          "-DTARGET_ARCH=${{ inputs.target_arch }}"
          ${{ inputs.qt_args }}
          -P .github/scripts/build-qt.cmake

    - uses: ./.github/actions/build-and-cache
      with:
        name: ffmpeg dependencies
        cache_key: ffmpeg-${{ inputs.cache_key }}-${{ inputs.libvpx }}-${{ inputs.libwebp }}-${{ inputs.ffmpeg }}
        path: ${{ inputs.path }}/ffmpeg
        pre_build: ${{ inputs.ffmpeg_pre_build }}
        build: >
          cmake
          -DBUILD_TYPE=${{ inputs.build_type }}
          "-DLIBVPX=${{ inputs.libvpx }}"
          "-DLIBWEBP=${{ inputs.libwebp }}"
          "-DFFMPEG=${{ inputs.ffmpeg }}"
          "-DCMAKE_PREFIX_PATH=${{ github.workspace }}/${{ inputs.path }}/qt"
          "-DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/${{ inputs.path }}/ffmpeg"
          "-DTARGET_ARCH=${{ inputs.target_arch }}"
          ${{ inputs.ffmpeg_args }}
          -P .github/scripts/build-ffmpeg.cmake

    - uses: ./.github/actions/build-and-cache
      with:
        name: other dependencies
        cache_key: other-${{ inputs.cache_key }}-${{ inputs.libmicrohttpd }}-${{ inputs.libsodium }}-${{ inputs.qtkeychain }}-${{ inputs.qt }}-${{ inputs.libzip }}-${{ inputs.karchive5 }}-${{ inputs.karchive6 }}-${{ inputs.zlib }}
        path: ${{ inputs.path }}/other
        pre_build: ${{ inputs.other_pre_build }}
        build: >
          cmake
          -DBUILD_TYPE=${{ inputs.build_type }}
          "-DZLIB=${{ inputs.zlib }}"
          "-DLIBMICROHTTPD=${{ inputs.libmicrohttpd }}"
          "-DLIBSODIUM=${{ inputs.libsodium }}"
          "-DQTKEYCHAIN=${{ inputs.qtkeychain }}"
          "-DLIBZIP=${{ inputs.libzip }}"
          "-DKARCHIVE5=v${{ inputs.karchive5 }}"
          "-DKARCHIVE6=v${{ inputs.karchive6 }}"
          "-DCMAKE_PREFIX_PATH=${{ github.workspace }}/${{ inputs.path }}/qt"
          "-DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/${{ inputs.path }}/other"
          "-DTARGET_ARCH=${{ inputs.target_arch }}"
          ${{ inputs.other_args }}
          -P .github/scripts/build-other.cmake
